/**
 * This is the Game of Life. Each cell has a state: alive (#) or dead (.). 
 * The number of alive cells is randomly selected at the start of the game.
 * The state of the cells changes each generation. If an alive cell has 2 
 * or 3 alive cells next to it, it stays alive. If it has 1, 0, or 4 or more 
 * cells next to it, it will die. A dead cell comes alive when there are 3 alive
 * cells next to it.
 * 
 * Author: Zach Brough
 * Version: 6.5.2023
 */
import java.util.Random;
import java.util.Scanner;

public class GameOfLife {
    private int width; // Width of the board
    private int height; // Height of the board
    private boolean[][] cells; // Game board of the cells

    // Creates a 2-dimensional array representing the game board
    public GameOfLife(int width, int height) {
        this.width = width;
        this.height = height;
        cells = new boolean[width][height]; // Sets game board width and height
        
    }

    // Randomly generates cells at the start
    public void initializeRandom() {
        Random rand = new Random();
        for (int x = 0; x < width; x++) {
            for (int y = 0; y < height; y++) {
                cells[x][y] = rand.nextBoolean();
            }
        }
    }
}